head	1.1;
access;
symbols;
locks
	punisher:1.1; strict;
comment	@ * @;


1.1
date	2010.10.05.09.21.10;	author punisher;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*Cesar Vargas
 *AI Fall 2010
 *SearchAlg.h
 */
#include <iostream>
#include "Queue.h"
#include "Square.h"
using namespace std;
class node{
 public:
  /* node(){} */
  node(Square in, node* q=0):data(in),parent(q){}
  Square data;
  node* parent;
};
class SearchAlg{
 private:
  node start;
  node goal;
  Queue<node> openlist;
  Queue<node> closedlist;
 public:
  SearchAlg();
  SearchAlg(Square sstart, Square sgoal);
};
SearchAlg::SearchAlg(Square sstart, Square sgoal){
   start(sstart); goal(sgoal);
}
@
